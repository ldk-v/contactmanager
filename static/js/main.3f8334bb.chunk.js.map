{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","email","phone","name","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qRAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACX,IAAK,iBACL,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OACvCA,EAAQC,KAAOP,EAAOQ,YAE1B,IAAK,cACL,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACL,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAEA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAASF,MAExG,QACA,OAAOP,IAIEa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACCtB,MAAQ,CACLK,SAAU,GACRwB,SAAU,SAAA5B,GAAM,OACZe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAMC,OAJ/Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQkBC,IAAMC,IAAK,8CAR7B,OAQMN,EARNE,EAAAK,KASA9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OAT7B,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAaK,OACIiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC7BkB,KAAKmC,MAAMC,cAfrBzC,EAAA,CAA8B0C,aAsBjBC,EAAW5D,EAAQ4D,SCejBC,6MA1DbzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMc,OAAN,gDAAAlD,OAA6DF,IAFvD,OAGZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAHhCmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAKZd,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IALhC,wBAAAmC,EAAAO,SAAAV,EAAA,iJASP,IAAAsB,EAAA5C,KAAA6C,EAC4B7C,KAAKmC,MAAM9C,QAAtCC,EADDuD,EACCvD,GAAIwD,EADLD,EACKC,MAAOC,EADZF,EACYE,MAAOC,EADnBH,EACmBG,KAClBR,EAAoBxC,KAAKlB,MAAzB0D,gBACR,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACbhB,EAAAb,EAAAc,cAAA,UACGc,EAAM,IACPf,EAAAb,EAAAc,cAAA,KACEgB,QAAS,kBACPN,EAAKhC,SAAS,CACZ4B,iBAAkBI,EAAK9D,MAAM0D,mBAGjCS,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBnB,EAAAb,EAAAc,cAAA,KACEe,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMtD,EAAIqB,KAE3CsB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAjE,OAAkBF,IAAM2C,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBAAoBE,MAAO,CAACC,OAAQ,UAAWC,MAAM,QAAQC,MAAM,QAAQI,YAAY,YAEvIlB,EACCP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCH,GACxCb,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,IAExC,eA9CIV,aCyBPsB,mLAvBX,OACE1B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACH7B,EAAY6B,EAAZ7B,SACL,OACA8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMwC,SAAP,KACE3B,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBACdhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,YADA,QAGC9D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC2B,EAAD,CACE9C,IAAK1B,EAAQC,GACbD,QAASA,gBAhBFgD,aCAjByB,SAAS,SAAA3B,GAAS,IACd4B,EAAa5B,EAAb4B,SACR,OACE9B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,2DACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,KAAG8B,KAAK,IAAIf,UAAU,gBACnBc,GAEH9B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,UAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChChB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,SAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1BhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBADf,iBAWda,EAAOG,aAAe,CACpBF,SAAU,UAOGD,QC1CA,SAASI,IACtB,OACEjC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAd,yBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,iDCCAkB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACArB,EAMIoB,EANJpB,KACAhC,EAKIoD,EALJpD,MACAsD,EAIIF,EAJJE,YACAtF,EAGIoF,EAHJpF,KACAuF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEvC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACbhB,EAAAb,EAAAc,cAAA,SAAOuC,QAASzB,GAAOqB,GACvBpC,EAAAb,EAAAc,cAAA,SACEe,UAAWyB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBxF,KAAMA,EACNgE,KAAMA,EACNsB,YAAaA,EACbtD,MAAOA,EACPuD,SAAUA,IAEXC,GAASvC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoBuB,MAgBrDL,EAAeF,aAAe,CAC5BjF,KAAM,QAGOmF,QC0DAS,6MAvGb9F,MAAQ,CACNkE,KAAM,GACNF,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAGVC,+CAAW,SAAAxD,EAAOX,EAAUoE,GAAjB,IAAAC,EAAAhC,EAAAF,EAAAC,EAAAkC,EAAA1D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACToD,EAAEG,iBADOF,EAEsBlF,EAAKhB,MAA5BkE,EAFCgC,EAEDhC,KAAMF,EAFLkC,EAEKlC,MAAOC,EAFZiC,EAEYjC,MAGX,KAAPC,EALM,CAAAvB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAACiE,OAAQ,CAAC7B,KAAK,sBANtBvB,EAAA0D,OAAA,oBASE,KAARrC,EATM,CAAArB,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAACiE,OAAQ,CAAC/B,MAAM,uBAVvBrB,EAAA0D,OAAA,oBAaE,KAARpC,EAbM,CAAAtB,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAACiE,OAAQ,CAAC9B,MAAM,uBAdvBtB,EAAA0D,OAAA,yBAkBHF,EAAa,CACjBjC,OACAF,QACAC,SArBOtB,EAAAE,KAAA,GAwBSC,IAAMwD,KAAK,6CAA8CH,GAxBlE,QAwBH1D,EAxBGE,EAAAK,KAyBTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZoC,KAAM,GACNF,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAGV/E,EAAKqC,MAAMkD,QAAQC,KAAK,KAnCf,yBAAA7D,EAAAO,SAAAV,gEAuCXiD,SAAW,SAAAQ,GAAC,OAAIjF,EAAKc,SAAL3B,OAAAsG,EAAA,EAAAtG,CAAA,GAAiB8F,EAAES,OAAOxC,KAAO+B,EAAES,OAAOxE,iFAEjD,IAAA4B,EAAA5C,KAAAyF,EACgCzF,KAAKlB,MAApCkE,EADDyC,EACCzC,KAAMF,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO8B,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM4C,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAACwD,EAAD,CACArB,MAAM,OACNrB,KAAK,OACLsB,YAAY,aACZtD,MAAOgC,EACPuB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,OAEdf,EAAAb,EAAAc,cAACwD,EAAD,CACArB,MAAM,QACNrB,KAAK,QACLhE,KAAK,QACLsF,YAAY,gBACZtD,MAAO8B,EACPyB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,QAEdb,EAAAb,EAAAc,cAACwD,EAAD,CACArB,MAAM,QACNrB,KAAK,QACLsB,YAAY,cACZtD,MAAO+B,EACPwB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAGdd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNiC,UAAU,yCA3FPZ,aCiHVsD,6MAhHb7G,MAAQ,CACNkE,KAAM,GACNF,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAcVC,+CAAW,SAAAxD,EAAOX,EAAUoE,GAAjB,IAAAC,EAAAhC,EAAAF,EAAAC,EAAA6C,EAAAtG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACToD,EAAEG,iBADOF,EAEsBlF,EAAKhB,MAA5BkE,EAFCgC,EAEDhC,KAAMF,EAFLkC,EAEKlC,MAAOC,EAFZiC,EAEYjC,MAGR,KAATC,EALK,CAAAvB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,KAAM,sBANzBvB,EAAA0D,OAAA,oBASK,KAAVrC,EATK,CAAArB,EAAAE,KAAA,eAUP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE/B,MAAO,uBAV1BrB,EAAA0D,OAAA,oBAaK,KAAVpC,EAbK,CAAAtB,EAAAE,KAAA,gBAcP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE9B,MAAO,uBAd1BtB,EAAA0D,OAAA,yBAiBHS,EAAa,CACf5C,OACAF,QACAC,SAEGzD,EAAMQ,EAAKqC,MAAM0D,MAAMC,OAAvBxG,GAtBEmC,EAAAE,KAAA,GAuBSC,IAAMmE,IAAN,8CAAAvG,OAAwDF,GAAMsG,GAvBvE,QAuBHrE,EAvBGE,EAAAK,KAwBTnB,EAAS,CAAC3B,KAAK,iBAAkBO,QAAQgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZoC,KAAM,GACNF,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAGV/E,EAAKqC,MAAMkD,QAAQC,KAAK,KAlCf,yBAAA7D,EAAAO,SAAAV,gEAqCXiD,SAAW,SAAAQ,GAAC,OAAIjF,EAAKc,SAAL3B,OAAAsG,EAAA,EAAAtG,CAAA,GAAiB8F,EAAES,OAAOxC,KAAO+B,EAAES,OAAOxE,qNA/C/C1B,EAAMU,KAAKmC,MAAM0D,MAAMC,OAAvBxG,YACWsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SACAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACVoC,KAAM3D,EAAQ2D,KACdF,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IA2Cd,IAAAH,EAAA5C,KAAAyF,EACgCzF,KAAKlB,MAApCkE,EADDyC,EACCzC,KAAMF,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO8B,EADrBY,EACqBZ,OAE5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,gBACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAM4C,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAACwD,EAAD,CACErB,MAAM,OACNrB,KAAK,OACLsB,YAAY,aACZtD,MAAOgC,EACPuB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,OAEhBf,EAAAb,EAAAc,cAACwD,EAAD,CACErB,MAAM,QACNrB,KAAK,QACLhE,KAAK,QACLsF,YAAY,gBACZtD,MAAO8B,EACPyB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,QAEhBb,EAAAb,EAAAc,cAACwD,EAAD,CACErB,MAAM,QACNrB,KAAK,QACLsB,YAAY,cACZtD,MAAO+B,EACPwB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAGhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,iBACNiC,UAAU,yCApGNZ,aCMX2D,EATE,WACf,OACE/D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAd,qBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,qCCwBSgD,6MA3BbnH,MAAQ,CACNoH,MAAO,GACPC,KAAM,uFAGY,IAAAvD,EAAA5C,KAClBoG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtE,GAAI,OACRa,EAAKhC,SAAS,CACZsF,MAAOnE,EAAKmE,MACZC,KAAMpE,EAAKoE,0CAKV,IAAAnB,EACiBhF,KAAKlB,MAArBoH,EADDlB,EACCkB,MAAOC,EADRnB,EACQmB,KACf,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKgE,GACLjE,EAAAb,EAAAc,cAAA,SAAIiE,WAtBO9D,aCkCJmE,mLAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACsB,EAAA,EAAD,KACEvB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAACwE,EAAD,CAAQ3C,SAAS,oBACjB9B,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACE1E,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC1B,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWlC,IAC5C3C,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWnB,IACjD1D,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW5C,IACvCjC,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWb,IACtChE,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOG,UAAWd,gBAdhB3D,aCAE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCbNsB,IAASC,OAAOnF,EAAAb,EAAAc,cAACmF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.3f8334bb.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n switch(action.type){\n    case 'DELETE_CONTACT':\n    return {\n        ...state,\n        contacts: state.contacts.filter(contact =>\n        contact.id !== action.payload)\n    };\n    case 'ADD_CONTACT':\n    return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n    };\n    case 'UPDATE_CONTACT':\n    return {\n        ...state,\n        contacts: state.contacts.map(contact=>contact.id === action.payload.id ? (contact = action.payload):contact)\n    };\n    default:\n    return state;\n }\n};\n\nexport class Provider extends Component {\n state = {\n    contacts: [],\n      dispatch: action => \n          this.setState(state => reducer(state,action))\n };\n\nasync componentDidMount(){\nconst res = await axios.get ('https://jsonplaceholder.typicode.com/users')\nthis.setState({contacts: res.data})\n}\n\n render() { \n     return (\n         <Context.Provider value={this.state}>\n         {this.props.children}\n         </Context.Provider>\n     )\n }\n\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/id${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, email, phone, name } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                  <Link to={`contact/edit/${id}`}><i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', float:'right',color:'black',marginRight:\"1rem\"}}></i></Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n        const {contacts} = value;\n          return (\n          <React.Fragment>\n            <h1 className=\"display-4 mb-2\">\n            <span className=\"text-danger\">Contact </span>List\n            </h1>\n            {contacts.map(contact => (\n              <Contact\n                key={contact.id}\n                contact={contact}\n              />\n            ))}\n          </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0.0</p>\n    </div>\n  )\n}\n","// import React from \"../../../../Library/Caches/typescript/2.9/node_modules/@types/react\";\n// import PropTypes from \"../../../../Library/Caches/typescript/2.9/node_modules/@types/prop-types\";\n// import classnames from \"../../../../Library/Caches/typescript/2.9/node_modules/@types/classnames\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n          className={classnames(\"form-control form-control-lg\", {\n            \"is-invalid\": error\n          })}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\"\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check fields errors\n    if(name===''){\n      this.setState({errors: {name:'Name is required'}});\n      return;\n    }\n    if(email===''){\n      this.setState({errors: {email:'Email is required'}});\n      return;\n    }\n    if(phone===''){\n      this.setState({errors: {phone:'Phone is required'}});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\"\n    });\n\n    this.props.history.push('/');\n\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                    />\n                    <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email..\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                    />\n                    <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount(){\n      const {id} = this.props.match.params;\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n      const contact = res.data;\n      this.setState({\n          name: contact.name,\n          email: contact.email,\n          phone: contact.phone\n      })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check fields errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const updContact = {\n        name,\n        email,\n        phone\n    }\n    const {id} = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n    dispatch({type:'UPDATE_CONTACT', payload:res.data})\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Edit Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email..\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"Update Contact\"\n                      className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 age Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/test/\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}